/*
-----------------------------------------------------------------------------
Filename:    OgreVishesh.cpp
-----------------------------------------------------------------------------


This source file is generated by the
   ___                   _              __    __ _                  _ 
  /___\__ _ _ __ ___    /_\  _ __  _ __/ / /\ \ (_)______ _ _ __ __| |
 //  // _` | '__/ _ \  //_\\| '_ \| '_ \ \/  \/ / |_  / _` | '__/ _` |
/ \_// (_| | | |  __/ /  _  \ |_) | |_) \  /\  /| |/ / (_| | | | (_| |
\___/ \__, |_|  \___| \_/ \_/ .__/| .__/ \/  \/ |_/___\__,_|_|  \__,_|
      |___/                 |_|   |_|                                 
      Ogre 1.8.x Application Wizard for VC10 (May 2012)
      https://bitbucket.org/jacmoe/ogreappwizards
-----------------------------------------------------------------------------
*/

#include "../include/OgreVishesh.h"
#include<iostream>

using namespace std;

//-------------------------------------------------------------------------------------
OgreVishesh::OgreVishesh(void)
{
}
//-------------------------------------------------------------------------------------
OgreVishesh::~OgreVishesh(void)
{
}

//-------------------------------------------------------------------------------------
void OgreVishesh::createScene(void)
{
    Ogre::Entity* ent1 = mSceneMgr->createEntity("Head1", "ogrehead.mesh");
	Ogre::Entity* ent2 = mSceneMgr->createEntity("Head2", "Sinbad.mesh");
	Ogre::Entity* ent3 = mSceneMgr->createEntity("Head3", "Sinbad.mesh");

	Ogre::SceneNode* node1=mSceneMgr->createSceneNode("node1");
	Ogre::SceneNode* node2=mSceneMgr->createSceneNode("node2");
	Ogre::SceneNode* node3=mSceneMgr->createSceneNode("node3");

	node1->setPosition(10,0,0);
	node2->setPosition(0,10,20);
	node3->setPosition(0,0,10);
	mSceneMgr->getRootSceneNode()->addChild(node1);
	node1->addChild(node2);
	node2->addChild(node3);

	node1->attachObject(ent1);
	node2->attachObject(ent2);
	node3->attachObject(ent3);


    /* example 1
	Ogre::SceneNode* headNode1 = mSceneMgr->getRootSceneNode()->createChildSceneNode("head1");
	Ogre::SceneNode* node1 = mSceneMgr->createSceneNode("node1");

	Ogre::SceneNode* headNode2 = headNode1->createChildSceneNode("head2",Ogre::Vector3(100,0,0));
    headNode1->attachObject(ogreHead1);
	headNode2->attachObject(ogreHead2);
	headNode2->translate(Ogre::Vector3(-100,0,100));*/
    // Set ambient light
    mSceneMgr->setAmbientLight(Ogre::ColourValue(1, 0.5, 0));

    // Create a light
    Ogre::Light* l = mSceneMgr->createLight("MainLight");
    l->setPosition(20,80,50);
	//cout<<ogreHead1->getName();

}



#if OGRE_PLATFORM == OGRE_PLATFORM_WIN32
#define WIN32_LEAN_AND_MEAN
#include "windows.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

#if OGRE_PLATFORM == OGRE_PLATFORM_WIN32
    INT WINAPI WinMain( HINSTANCE hInst, HINSTANCE, LPSTR strCmdLine, INT )
#else
    int main(int argc, char *argv[])
#endif
    {
        // Create application object
        OgreVishesh app;

        try {
            app.go();
        } catch( Ogre::Exception& e ) {
#if OGRE_PLATFORM == OGRE_PLATFORM_WIN32
            MessageBox( NULL, e.getFullDescription().c_str(), "An exception has occured!", MB_OK | MB_ICONERROR | MB_TASKMODAL);
#else
            std::cerr << "An exception has occured: " <<
                e.getFullDescription().c_str() << std::endl;
#endif
        }

        return 0;
    }

#ifdef __cplusplus
}
#endif
