/*
-----------------------------------------------------------------------------
Filename:    OgreVishesh.h
-----------------------------------------------------------------------------


This source file is generated by the
   ___                   _              __    __ _                  _ 
  /___\__ _ _ __ ___    /_\  _ __  _ __/ / /\ \ (_)______ _ _ __ __| |
 //  // _` | '__/ _ \  //_\\| '_ \| '_ \ \/  \/ / |_  / _` | '__/ _` |
/ \_// (_| | | |  __/ /  _  \ |_) | |_) \  /\  /| |/ / (_| | | | (_| |
\___/ \__, |_|  \___| \_/ \_/ .__/| .__/ \/  \/ |_/___\__,_|_|  \__,_|
      |___/                 |_|   |_|                                 
      Ogre 1.8.x Application Wizard for VC10 (May 2012)
      https://bitbucket.org/jacmoe/ogreappwizards
-----------------------------------------------------------------------------
*/
#ifndef __OgreVishesh_h_
#define __OgreVishesh_h_

#include "BaseApplication.h"
#if OGRE_PLATFORM == OGRE_PLATFORM_WIN32
#include "../res/resource.h"
#endif
using namespace std;

class OgreVishesh : public BaseApplication
{
public:
    OgreVishesh(void);
    virtual ~OgreVishesh(void);

protected:
  virtual void createScene(void);
	virtual void createCamera(void);
	void createFrameListener(void);

	Ogre::SceneNode* _SinbadNode;
};

class OgreVisheshFrameListener : public Ogre::FrameListener
{
public:
	OgreVisheshFrameListener(Ogre::SceneNode*,Ogre::RenderWindow*,Ogre::Camera*);
	OgreVisheshFrameListener(void);
	~OgreVisheshFrameListener(void);
	bool frameStarted(const Ogre:: FrameEvent &evt);
protected:
	Ogre::SceneNode* _node;
	Ogre::FrameListener* FrameListener;
	OIS::InputManager* _man;
	OIS::Keyboard* _key;
	Ogre::Camera* _cam;
	OIS::Mouse* _mouse;
	Ogre::PolygonMode _polyMode;
	Ogre::Timer _timer;
};

#endif // #ifndef __OgreVishesh_h_
